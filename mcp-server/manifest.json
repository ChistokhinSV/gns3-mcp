{
  "manifest_version": "0.2",
  "name": "gns3-mcp",
  "display_name": "GNS3 Lab Controller",
  "version": "0.4.6",
  "description": "Control and automate GNS3 network labs through Claude with type-safe operations",
  "long_description": "Version 0.4.6: Fixed topology export - node labels now use correct positioning (GNS3 stores offsets from center), links connect to node centers instead of top-left corners. Version 0.4.5: CRITICAL FIX - All GNS3 coordinates use top-left corner origin (nodes, drawings, labels). Fixed topology export positioning. Version 0.4.4: Fixed topology export to use correct icon sizes (PNG: 78×78, SVG: 58×58). Version 0.4.3: Fixed topology export to respect actual GNS3 label positions (x, y, rotation, style). Version 0.4.2: Added export_topology_diagram for SVG/PNG screenshots with embedded icons. Version 0.4.1: Added delete_drawing and create_ellipse tools. Version 0.4.0: Node creation from templates, node deletion, drawing objects (rectangles, text, shapes). NEW TOOLS: delete_node, list_templates, create_node, list_drawings, create_rectangle, create_text, delete_drawing, create_ellipse, export_topology_diagram. Version 0.3.2: Enhanced set_node with hardware configuration (rename, RAM, CPUs, HDD image, adapters, console type). Version 0.3.0: Type-safe Pydantic models, two-phase link validation, performance caching, multi-adapter support. Features: project/node/link management, auto-connecting consoles, template-based node creation, colored rectangles, ellipses/circles, formatted text labels, and topology export to SVG/PNG with correct coordinate system and accurate label/link positioning. Supports GNS3 v3 API.",
  "author": {
    "name": "Sergei Chistokhin",
    "email": "Sergei@Chistokhin.com"
  },
  "server": {
    "type": "python",
    "entry_point": "server/main.py",
    "mcp_config": {
      "command": "python",
      "args": [
        "${__dirname}/server/main.py",
        "--host=${user_config.gns3_host}",
        "--port=${user_config.gns3_port}",
        "--username=${user_config.username}",
        "--password=${user_config.password}"
      ],
      "env": {
        "PYTHONPATH": "${__dirname}/lib;${__dirname}/server"
      }
    }
  },
  "user_config": {
    "gns3_host": {
      "type": "string",
      "title": "GNS3 Server Host",
      "description": "GNS3 server hostname or IP address",
      "default": "localhost",
      "required": true
    },
    "gns3_port": {
      "type": "number",
      "title": "GNS3 Server Port",
      "description": "GNS3 server API port",
      "default": 80,
      "required": true
    },
    "username": {
      "type": "string",
      "title": "Username",
      "description": "GNS3 username",
      "default": "admin",
      "required": true
    },
    "password": {
      "type": "string",
      "title": "Password",
      "description": "GNS3 password",
      "sensitive": true,
      "required": true
    }
  },
  "tools": [
    {
      "name": "list_projects",
      "description": "List all GNS3 projects (returns JSON array of ProjectInfo)"
    },
    {
      "name": "open_project",
      "description": "Open a GNS3 project by name (returns JSON ProjectInfo)"
    },
    {
      "name": "list_nodes",
      "description": "List all nodes in current project (returns JSON array of NodeInfo)"
    },
    {
      "name": "get_node_details",
      "description": "Get detailed node information (returns JSON NodeInfo)"
    },
    {
      "name": "get_links",
      "description": "List all network links with adapters/ports (returns JSON array of LinkInfo)"
    },
    {
      "name": "set_node",
      "description": "Configure node properties and/or control state (start/stop/suspend/reload/restart)"
    },
    {
      "name": "send_console",
      "description": "Send commands to node console (auto-connects if needed)"
    },
    {
      "name": "read_console",
      "description": "Read console output (full buffer or diff mode)"
    },
    {
      "name": "disconnect_console",
      "description": "Disconnect from node console session (returns JSON status)"
    },
    {
      "name": "get_console_status",
      "description": "Check console connection status for a node (returns JSON ConsoleStatus)"
    },
    {
      "name": "set_connection",
      "description": "Batch manage network connections with two-phase validation (requires adapters)"
    },
    {
      "name": "delete_node",
      "description": "Delete a node from the current project"
    },
    {
      "name": "list_templates",
      "description": "List all available GNS3 templates (returns JSON array of TemplateInfo)"
    },
    {
      "name": "create_node",
      "description": "Create a new node from a template at specified coordinates"
    },
    {
      "name": "list_drawings",
      "description": "List all drawing objects in current project (returns JSON array of DrawingInfo)"
    },
    {
      "name": "create_rectangle",
      "description": "Create a colored rectangle drawing with customizable fill and border"
    },
    {
      "name": "create_text",
      "description": "Create a text label with formatting (bold, font size, color)"
    },
    {
      "name": "delete_drawing",
      "description": "Delete a drawing object from the current project"
    },
    {
      "name": "create_ellipse",
      "description": "Create an ellipse or circle drawing with customizable fill and border"
    },
    {
      "name": "export_topology_diagram",
      "description": "Export topology as SVG and/or PNG diagram with nodes, links, and drawings"
    }
  ],
  "compatibility": {
    "platforms": ["darwin", "win32", "linux"],
    "runtimes": {
      "python": ">=3.10"
    }
  }
}
