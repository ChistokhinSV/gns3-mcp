repos:
  # Ruff - Fast Python linter
  - repo: https://github.com/astral-sh/ruff-pre-commit
    rev: v0.14.2
    hooks:
      # Run linter
      - id: ruff
        args: [--fix, --exit-non-zero-on-fix]
      # Run formatter
      - id: ruff-format

  # Black - Code formatter
  - repo: https://github.com/psf/black
    rev: 25.9.0
    hooks:
      - id: black
        language_version: python3

  # Mypy - Type checker
  - repo: https://github.com/pre-commit/mirrors-mypy
    rev: v1.18.2
    hooks:
      - id: mypy
        additional_dependencies: [
          'pydantic>=2.12.3',
          'httpx>=0.28.1',
          'types-aiofiles',
        ]
        exclude: 'mcp-server/lib/'

  # Pytest - Run tests
  - repo: local
    hooks:
      - id: pytest
        name: Run pytest tests
        entry: bash -c 'pytest tests/unit -v --tb=short || true'
        language: system
        pass_filenames: false
        types: [python]
        stages: [pre-commit]

  # Update dependencies when requirements.txt changes
  - repo: local
    hooks:
      - id: update-lib
        name: Update lib dependencies
        entry: bash -c 'powershell -Command "Remove-Item -Path mcp-server/lib -Recurse -Force -ErrorAction SilentlyContinue; New-Item -Path mcp-server/lib -ItemType Directory -Force" && pip install --target=mcp-server/lib fastmcp>=2.13.0.2 httpx>=0.28.1 telnetlib3>=2.0.8 pydantic>=2.12.3 python-dotenv>=1.2.1 cairosvg>=2.8.2 docker>=7.1.0 tabulate>=0.9.0 --no-warn-script-location'
        language: system
        pass_filenames: false
        files: '^requirements\.txt$'

  # Build desktop extension
  - repo: local
    hooks:
      - id: build-mcpb
        name: Build desktop extension
        entry: bash -c 'cd mcp-server && npx @anthropic-ai/mcpb pack'
        language: system
        pass_filenames: false
        files: '^gns3_mcp/server/.*\.py$|^mcp-server/manifest\.json$|^requirements\.txt$'
