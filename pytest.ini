[pytest]
# Pytest configuration for GNS3 MCP Server

# Test discovery patterns
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Test directory
testpaths = tests

# Output options
# -v: Verbose output
# --tb=short: Shorter traceback format
# --strict-markers: Require all markers to be registered
# --cov=mcp-server/server: Coverage for server code
# --cov-report=term-missing: Show missing lines in coverage report
# --cov-report=html: Generate HTML coverage report
# --cov-branch: Enable branch coverage
addopts =
    -v
    --tb=short
    --strict-markers
    --cov=gns3_mcp/server
    --cov-report=term-missing
    --cov-report=html
    --cov-branch

# Markers for categorizing tests
markers =
    unit: Unit tests (fast, isolated)
    integration: Integration tests (require GNS3 server)
    slow: Slow tests (may take >1s)
    asyncio: Asynchronous tests

# Asyncio configuration (pytest-asyncio)
asyncio_mode = auto
asyncio_default_fixture_loop_scope = function

# Coverage settings
[coverage:run]
source = gns3_mcp/server
omit =
    */tests/*
    */venv/*
    */__pycache__/*
    */lib/*

[coverage:report]
precision = 2
show_missing = True
skip_covered = False
exclude_lines =
    # Standard pragma
    pragma: no cover

    # Debug code
    def __repr__

    # Abstract methods
    raise NotImplementedError

    # Type checking
    if TYPE_CHECKING:

    # Main entry points
    if __name__ == .__main__.:
